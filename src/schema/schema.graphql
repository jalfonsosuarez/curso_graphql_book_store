
type Query {
    hello: String!
    helloWithName(name: String): String!
    peopleNumber: Int!
    bookList: Result!
    book(id: ID!): Result!
    peopleList: Result!
    people(id: ID!): Result!
}

type Mutation {
    addBook( book: BookInput! ): Result!
    updateBook( book: BookInput ): Result!
    deleteBook( id: ID! ): Result!
    addPeople( people: PeopleInput! ): Result!
    updatePeople( people: PeopleInput! ): Result!
    deletePeople( id: ID! ): Result!
}

union Data = Book | People

# Información de libros
type Book {
    id: ID!
    title: String!
    isbn: String!
    pageCount: Int!
    publishedDate: String
    thumbnailUrl: String
    shortDescription: String
    longDescription: String
    status: String
    authors: [String!]!
    byPeopleBuy: [People]
}

input BookInput {
    id: ID
    title: String!
    isbn: String!
    pageCount: Int!
    publishedDate: String
    thumbnailUrl: String
    shortDescription: String
    longDescription: String
    status: StatusEnum = UNPUBLISH
    authors: [String!]!
}

enum StatusEnum {
    PUBLISH
    UNPUBLISH
}

# Informacion de personas
type People {
    id: ID!
    name: String!
    email: String!
    website: String
    github: String
    twitter: String
    books: [String!]!
    #Libros comprados
    booksBuy: [Book]
}

input PeopleInput {
    id: ID
    name: String!
    email: String!
    website: String
    github: String
    twitter: String
    books: [String!]!
}

# Definir restultado con más detalle
type Result {
    status: Boolean!
    message: String!
    list: [Data!]
    item: Data
}

